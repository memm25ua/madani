---
type Project = {
    name: string;
    description: string;
    img: string;
    url?: string;
    date?: string;
    stack?: string[];
};

const projects: readonly Project[] = [
    {
        name: "Aistack",
        description:
            "Aistack es una startup que ofrece soluciones tecnológicas basadas en modelos de lenguaje e inteligencia artificial para pequeñas/medianas empresas.",
        img: "/assets/projects/project-1.png",
        url: "https://aistack.es",
        date: "2025 - Presente",
        stack: [
            "Astro (para la web)",
            "n8n",
            "OpenAI",
            "Airtable",
            "PostgreSQL",
            "Docker",
            "AWS",
        ],
    },
    {
        name: "Bindfy",
        description:
            "Bindfy es una aplicación movil en desarrollo centrada en la fidelización de clientes, usando Kotlin Multiplatorm haciendo posible que sea multiplataforma IOS y Android. <br/><br/>Intentamos mejorar la interacción entre las pequeñas empresas y sus clientes, además de dar información valiosa a pequeños negocios sobre ellos.",
        img: "/assets/projects/project2.jpg",
        date: "2024 - Presente",
        stack: ["Kotlin Multiplatform", "Supabase", "PostgreSQL", "AWS"],
    },
];
---

<style is:global>
    section.card {
        width: 100vw;
        height: 100vh;
    }

    .card.scroll {
        position: relative;
    }

    .project {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
        width: 85%;
        height: 75%;
        display: flex;
    }

    .project-copy {
        position: relative;
        flex: 1.75;
        border-radius: 12px;
        padding: 2em;
        background: #ffffff;
        color: #333333;
    }

    .project-img {
        flex: 3;
        border-radius: 12px;
        overflow: hidden;
    }

    .project-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
    }

    .project-header h3 {
        color: #333333;
        text-transform: uppercase;
        font-size: 40px;
        line-height: 100%;
    }

    .project-header p {
        padding: 0 !important;
    }

    .project-copy p {
        padding: 1em 0;
    }

    .project-stack {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        padding: 2em;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5em;
    }

    .pill {
        padding: 0.5em 1em;
        border-radius: 12px;
        background: #eee;
        font-size: 12px;
        text-transform: uppercase;
        color: #333;
    }

    @media (max-width: 900px) {
        .project {
            flex-direction: column;
        }

        .project-header h3 {
            font-size: 24px;
        }
    }
</style>

<!-- projects -->
<section class="sticky-cards">
    <section class="projecr-hero pinned"></section>

    {
        projects.map((project, index) => (
            <section
                class={
                    index === projects.length - 1
                        ? "card scroll"
                        : "card pinned"
                }
            >
                <div class="project">
                    <div class="project-copy">
                        <div class="project-header">
                            <h3>{project.name}</h3>
                            <p>{project.date}</p>
                        </div>

                        <p set:html={project.description} />

                        <div class="project-stack">
                            {project.stack?.map((tech) => (
                                <span class="pill">{tech}</span>
                            ))}
                        </div>
                    </div>
                    <div class="project-img">
                        <img src={project.img} alt={project.name} />
                    </div>
                </div>
            </section>
        ))
    }

    <section class="footer"></section>
</section>

<script>
    import gsap from "gsap";
    import ScrollTrigger from "gsap/ScrollTrigger";

    function animateProjects() {
        gsap.registerPlugin(ScrollTrigger);

        const footer = document.querySelector(".footer");
        const lastCard = document.querySelector(".card.scroll");
        const pinnedSections = gsap.utils.toArray(".pinned");

        if (!footer || !lastCard) {
            console.warn(
                "Footer or last card not found, animations might be affected.",
            );
            return;
        }

        pinnedSections.forEach((section, index, sections) => {
            let project = section.querySelector(".project");

            // Pin all sections
            gsap.to(section, {
                scrollTrigger: {
                    trigger: section,
                    start: "top top",
                    end: footer.offsetTop - window.innerHeight,
                    pin: true,
                    pinSpacing: false,
                    scrub: 1,
                },
            });

            // Animate only sections that have a project inside
            if (project) {
                let nextSection = sections[index + 1] || lastCard;
                let endScalePoint = `top+=${nextSection.offsetTop - section.offsetTop} top`;

                gsap.fromTo(
                    project,
                    { scale: 1, filter: "blur(0px)" },
                    {
                        scale: 0.5,
                        filter: "blur(10px)",
                        ease: "none",
                        scrollTrigger: {
                            trigger: section,
                            start: "top top",
                            end: endScalePoint,
                            scrub: 1,
                        },
                    },
                );
            }
        });
    }

    document.addEventListener("DOMContentLoaded", animateProjects);
</script>
